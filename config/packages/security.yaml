security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    providers:
#        in_memory: { memory: null }
#        in memory:
#            memory:
#                users:
#                    admin:
#                        password: admin
#                        roles: 'ROLE_ADMIN'
    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: argon2i

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
#            anonymous: true
#            http_basic: ~
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                login_path: fos_user_security_login
                check_path: fos_user_security_check

            logout:
                path: fos_user_security_logout
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/ru/admin, roles: ROLE_ADMIN }
         - { path: ^/job/create, roles: ROLE_USER }
